// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: api/proto/govc.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Repository Messages
type CreateRepositoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRepositoryRequest) Reset() {
	*x = CreateRepositoryRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepositoryRequest) ProtoMessage() {}

func (x *CreateRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepositoryRequest.ProtoReflect.Descriptor instead.
func (*CreateRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRepositoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateRepositoryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRepositoryRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRepositoryRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CreateRepositoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRepositoryResponse) Reset() {
	*x = CreateRepositoryResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepositoryResponse) ProtoMessage() {}

func (x *CreateRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepositoryResponse.ProtoReflect.Descriptor instead.
func (*CreateRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRepositoryResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateRepositoryResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRepositoryResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetRepositoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepositoryRequest) Reset() {
	*x = GetRepositoryRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryRequest) ProtoMessage() {}

func (x *GetRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryRequest.ProtoReflect.Descriptor instead.
func (*GetRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{2}
}

func (x *GetRepositoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetRepositoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,5,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRepositoryResponse) Reset() {
	*x = GetRepositoryResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRepositoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRepositoryResponse) ProtoMessage() {}

func (x *GetRepositoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRepositoryResponse.ProtoReflect.Descriptor instead.
func (*GetRepositoryResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{3}
}

func (x *GetRepositoryResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetRepositoryResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetRepositoryResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetRepositoryResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetRepositoryResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DeleteRepositoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRepositoryRequest) Reset() {
	*x = DeleteRepositoryRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRepositoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRepositoryRequest) ProtoMessage() {}

func (x *DeleteRepositoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRepositoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteRepositoryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRepositoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListRepositoriesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepositoriesRequest) Reset() {
	*x = ListRepositoriesRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepositoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepositoriesRequest) ProtoMessage() {}

func (x *ListRepositoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepositoriesRequest.ProtoReflect.Descriptor instead.
func (*ListRepositoriesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{5}
}

func (x *ListRepositoriesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRepositoriesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListRepositoriesResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Repositories  []*GetRepositoryResponse `protobuf:"bytes,1,rep,name=repositories,proto3" json:"repositories,omitempty"`
	Total         int32                    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepositoriesResponse) Reset() {
	*x = ListRepositoriesResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepositoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepositoriesResponse) ProtoMessage() {}

func (x *ListRepositoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepositoriesResponse.ProtoReflect.Descriptor instead.
func (*ListRepositoriesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{6}
}

func (x *ListRepositoriesResponse) GetRepositories() []*GetRepositoryResponse {
	if x != nil {
		return x.Repositories
	}
	return nil
}

func (x *ListRepositoriesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Blob Messages
type StoreBlobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Content       []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreBlobRequest) Reset() {
	*x = StoreBlobRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreBlobRequest) ProtoMessage() {}

func (x *StoreBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreBlobRequest.ProtoReflect.Descriptor instead.
func (*StoreBlobRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{7}
}

func (x *StoreBlobRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *StoreBlobRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type StoreBlobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreBlobResponse) Reset() {
	*x = StoreBlobResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreBlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreBlobResponse) ProtoMessage() {}

func (x *StoreBlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreBlobResponse.ProtoReflect.Descriptor instead.
func (*StoreBlobResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{8}
}

func (x *StoreBlobResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *StoreBlobResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetBlobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Hash          string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlobRequest) Reset() {
	*x = GetBlobRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobRequest) ProtoMessage() {}

func (x *GetBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobRequest.ProtoReflect.Descriptor instead.
func (*GetBlobRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{9}
}

func (x *GetBlobRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *GetBlobRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetBlobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Hash          string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlobResponse) Reset() {
	*x = GetBlobResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobResponse) ProtoMessage() {}

func (x *GetBlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobResponse.ProtoReflect.Descriptor instead.
func (*GetBlobResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{10}
}

func (x *GetBlobResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GetBlobResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetBlobResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type StoreBlobWithDeltaRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId   string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Content        []byte                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	UseCompression bool                   `protobuf:"varint,3,opt,name=use_compression,json=useCompression,proto3" json:"use_compression,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StoreBlobWithDeltaRequest) Reset() {
	*x = StoreBlobWithDeltaRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreBlobWithDeltaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreBlobWithDeltaRequest) ProtoMessage() {}

func (x *StoreBlobWithDeltaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreBlobWithDeltaRequest.ProtoReflect.Descriptor instead.
func (*StoreBlobWithDeltaRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{11}
}

func (x *StoreBlobWithDeltaRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *StoreBlobWithDeltaRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *StoreBlobWithDeltaRequest) GetUseCompression() bool {
	if x != nil {
		return x.UseCompression
	}
	return false
}

type StoreBlobWithDeltaResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Hash             string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Size             int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	CompressedSize   int64                  `protobuf:"varint,3,opt,name=compressed_size,json=compressedSize,proto3" json:"compressed_size,omitempty"`
	CompressionRatio float32                `protobuf:"fixed32,4,opt,name=compression_ratio,json=compressionRatio,proto3" json:"compression_ratio,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StoreBlobWithDeltaResponse) Reset() {
	*x = StoreBlobWithDeltaResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreBlobWithDeltaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreBlobWithDeltaResponse) ProtoMessage() {}

func (x *StoreBlobWithDeltaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreBlobWithDeltaResponse.ProtoReflect.Descriptor instead.
func (*StoreBlobWithDeltaResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{12}
}

func (x *StoreBlobWithDeltaResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *StoreBlobWithDeltaResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *StoreBlobWithDeltaResponse) GetCompressedSize() int64 {
	if x != nil {
		return x.CompressedSize
	}
	return 0
}

func (x *StoreBlobWithDeltaResponse) GetCompressionRatio() float32 {
	if x != nil {
		return x.CompressionRatio
	}
	return 0
}

type GetBlobWithDeltaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Hash          string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBlobWithDeltaRequest) Reset() {
	*x = GetBlobWithDeltaRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlobWithDeltaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobWithDeltaRequest) ProtoMessage() {}

func (x *GetBlobWithDeltaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobWithDeltaRequest.ProtoReflect.Descriptor instead.
func (*GetBlobWithDeltaRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{13}
}

func (x *GetBlobWithDeltaRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *GetBlobWithDeltaRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetBlobWithDeltaResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Content        []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Hash           string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Size           int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	CompressedSize int64                  `protobuf:"varint,4,opt,name=compressed_size,json=compressedSize,proto3" json:"compressed_size,omitempty"`
	WasCompressed  bool                   `protobuf:"varint,5,opt,name=was_compressed,json=wasCompressed,proto3" json:"was_compressed,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetBlobWithDeltaResponse) Reset() {
	*x = GetBlobWithDeltaResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBlobWithDeltaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlobWithDeltaResponse) ProtoMessage() {}

func (x *GetBlobWithDeltaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlobWithDeltaResponse.ProtoReflect.Descriptor instead.
func (*GetBlobWithDeltaResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{14}
}

func (x *GetBlobWithDeltaResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GetBlobWithDeltaResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetBlobWithDeltaResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetBlobWithDeltaResponse) GetCompressedSize() int64 {
	if x != nil {
		return x.CompressedSize
	}
	return 0
}

func (x *GetBlobWithDeltaResponse) GetWasCompressed() bool {
	if x != nil {
		return x.WasCompressed
	}
	return false
}

// Batch Operations
type BatchOperationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Operations    []*BatchOperation      `protobuf:"bytes,2,rep,name=operations,proto3" json:"operations,omitempty"`
	Parallel      bool                   `protobuf:"varint,3,opt,name=parallel,proto3" json:"parallel,omitempty"`
	Transaction   bool                   `protobuf:"varint,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchOperationsRequest) Reset() {
	*x = BatchOperationsRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchOperationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOperationsRequest) ProtoMessage() {}

func (x *BatchOperationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOperationsRequest.ProtoReflect.Descriptor instead.
func (*BatchOperationsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{15}
}

func (x *BatchOperationsRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *BatchOperationsRequest) GetOperations() []*BatchOperation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *BatchOperationsRequest) GetParallel() bool {
	if x != nil {
		return x.Parallel
	}
	return false
}

func (x *BatchOperationsRequest) GetTransaction() bool {
	if x != nil {
		return x.Transaction
	}
	return false
}

type BatchOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Params        []byte                 `protobuf:"bytes,3,opt,name=params,proto3" json:"params,omitempty"` // JSON-encoded parameters
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchOperation) Reset() {
	*x = BatchOperation{}
	mi := &file_api_proto_govc_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOperation) ProtoMessage() {}

func (x *BatchOperation) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOperation.ProtoReflect.Descriptor instead.
func (*BatchOperation) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{16}
}

func (x *BatchOperation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchOperation) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BatchOperation) GetParams() []byte {
	if x != nil {
		return x.Params
	}
	return nil
}

type BatchOperationsResponse struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	Results         []*BatchOperationResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Success         bool                    `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error           string                  `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	ExecutionTimeMs float64                 `protobuf:"fixed64,4,opt,name=execution_time_ms,json=executionTimeMs,proto3" json:"execution_time_ms,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BatchOperationsResponse) Reset() {
	*x = BatchOperationsResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchOperationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOperationsResponse) ProtoMessage() {}

func (x *BatchOperationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOperationsResponse.ProtoReflect.Descriptor instead.
func (*BatchOperationsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{17}
}

func (x *BatchOperationsResponse) GetResults() []*BatchOperationResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *BatchOperationsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BatchOperationsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *BatchOperationsResponse) GetExecutionTimeMs() float64 {
	if x != nil {
		return x.ExecutionTimeMs
	}
	return 0
}

type BatchOperationResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Result        []byte                 `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"` // JSON-encoded result
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchOperationResult) Reset() {
	*x = BatchOperationResult{}
	mi := &file_api_proto_govc_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchOperationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchOperationResult) ProtoMessage() {}

func (x *BatchOperationResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchOperationResult.ProtoReflect.Descriptor instead.
func (*BatchOperationResult) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{18}
}

func (x *BatchOperationResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *BatchOperationResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BatchOperationResult) GetResult() []byte {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BatchOperationResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// File Operations
type AddFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Content       []byte                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFileRequest) Reset() {
	*x = AddFileRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFileRequest) ProtoMessage() {}

func (x *AddFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFileRequest.ProtoReflect.Descriptor instead.
func (*AddFileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{19}
}

func (x *AddFileRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *AddFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *AddFileRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type AddFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddFileResponse) Reset() {
	*x = AddFileResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFileResponse) ProtoMessage() {}

func (x *AddFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFileResponse.ProtoReflect.Descriptor instead.
func (*AddFileResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{20}
}

func (x *AddFileResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *AddFileResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ReadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Commit        string                 `protobuf:"bytes,3,opt,name=commit,proto3" json:"commit,omitempty"` // Optional: specific commit
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileRequest) Reset() {
	*x = ReadFileRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileRequest) ProtoMessage() {}

func (x *ReadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileRequest.ProtoReflect.Descriptor instead.
func (*ReadFileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{21}
}

func (x *ReadFileRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *ReadFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReadFileRequest) GetCommit() string {
	if x != nil {
		return x.Commit
	}
	return ""
}

type ReadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Hash          string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	LastModified  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadFileResponse) Reset() {
	*x = ReadFileResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadFileResponse) ProtoMessage() {}

func (x *ReadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadFileResponse.ProtoReflect.Descriptor instead.
func (*ReadFileResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{22}
}

func (x *ReadFileResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ReadFileResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *ReadFileResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ReadFileResponse) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

type WriteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Content       []byte                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	CreateDirs    bool                   `protobuf:"varint,4,opt,name=create_dirs,json=createDirs,proto3" json:"create_dirs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFileRequest) Reset() {
	*x = WriteFileRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileRequest) ProtoMessage() {}

func (x *WriteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileRequest.ProtoReflect.Descriptor instead.
func (*WriteFileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{23}
}

func (x *WriteFileRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *WriteFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *WriteFileRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *WriteFileRequest) GetCreateDirs() bool {
	if x != nil {
		return x.CreateDirs
	}
	return false
}

type WriteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFileResponse) Reset() {
	*x = WriteFileResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFileResponse) ProtoMessage() {}

func (x *WriteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFileResponse.ProtoReflect.Descriptor instead.
func (*WriteFileResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{24}
}

func (x *WriteFileResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *WriteFileResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type RemoveFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFileRequest) Reset() {
	*x = RemoveFileRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFileRequest) ProtoMessage() {}

func (x *RemoveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFileRequest.ProtoReflect.Descriptor instead.
func (*RemoveFileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{25}
}

func (x *RemoveFileRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *RemoveFileRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type MoveFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	FromPath      string                 `protobuf:"bytes,2,opt,name=from_path,json=fromPath,proto3" json:"from_path,omitempty"`
	ToPath        string                 `protobuf:"bytes,3,opt,name=to_path,json=toPath,proto3" json:"to_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFileRequest) Reset() {
	*x = MoveFileRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileRequest) ProtoMessage() {}

func (x *MoveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileRequest.ProtoReflect.Descriptor instead.
func (*MoveFileRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{26}
}

func (x *MoveFileRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *MoveFileRequest) GetFromPath() string {
	if x != nil {
		return x.FromPath
	}
	return ""
}

func (x *MoveFileRequest) GetToPath() string {
	if x != nil {
		return x.ToPath
	}
	return ""
}

// Commit Operations
type CommitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Author        string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Files         []string               `protobuf:"bytes,4,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitRequest) Reset() {
	*x = CommitRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRequest) ProtoMessage() {}

func (x *CommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRequest.ProtoReflect.Descriptor instead.
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{27}
}

func (x *CommitRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *CommitRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommitRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CommitRequest) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type CommitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Author        string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitResponse) Reset() {
	*x = CommitResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitResponse) ProtoMessage() {}

func (x *CommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitResponse.ProtoReflect.Descriptor instead.
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{28}
}

func (x *CommitResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *CommitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommitResponse) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *CommitResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type GetCommitRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Hash          string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommitRequest) Reset() {
	*x = GetCommitRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitRequest) ProtoMessage() {}

func (x *GetCommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitRequest.ProtoReflect.Descriptor instead.
func (*GetCommitRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{29}
}

func (x *GetCommitRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *GetCommitRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type GetCommitResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Author        string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ParentHashes  []string               `protobuf:"bytes,5,rep,name=parent_hashes,json=parentHashes,proto3" json:"parent_hashes,omitempty"`
	Changes       []*FileChange          `protobuf:"bytes,6,rep,name=changes,proto3" json:"changes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommitResponse) Reset() {
	*x = GetCommitResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommitResponse) ProtoMessage() {}

func (x *GetCommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommitResponse.ProtoReflect.Descriptor instead.
func (*GetCommitResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{30}
}

func (x *GetCommitResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *GetCommitResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCommitResponse) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *GetCommitResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *GetCommitResponse) GetParentHashes() []string {
	if x != nil {
		return x.ParentHashes
	}
	return nil
}

func (x *GetCommitResponse) GetChanges() []*FileChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

type FileChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // "added", "modified", "deleted"
	Hash          string                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChange) Reset() {
	*x = FileChange{}
	mi := &file_api_proto_govc_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChange) ProtoMessage() {}

func (x *FileChange) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChange.ProtoReflect.Descriptor instead.
func (*FileChange) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{31}
}

func (x *FileChange) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileChange) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *FileChange) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

type ListCommitsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Limit         int32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Branch        string                 `protobuf:"bytes,4,opt,name=branch,proto3" json:"branch,omitempty"`
	Author        string                 `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommitsRequest) Reset() {
	*x = ListCommitsRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommitsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommitsRequest) ProtoMessage() {}

func (x *ListCommitsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommitsRequest.ProtoReflect.Descriptor instead.
func (*ListCommitsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{32}
}

func (x *ListCommitsRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *ListCommitsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListCommitsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListCommitsRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *ListCommitsRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

type ListCommitsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commits       []*GetCommitResponse   `protobuf:"bytes,1,rep,name=commits,proto3" json:"commits,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCommitsResponse) Reset() {
	*x = ListCommitsResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCommitsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCommitsResponse) ProtoMessage() {}

func (x *ListCommitsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCommitsResponse.ProtoReflect.Descriptor instead.
func (*ListCommitsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{33}
}

func (x *ListCommitsResponse) GetCommits() []*GetCommitResponse {
	if x != nil {
		return x.Commits
	}
	return nil
}

func (x *ListCommitsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Branch Operations
type CreateBranchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FromCommit    string                 `protobuf:"bytes,3,opt,name=from_commit,json=fromCommit,proto3" json:"from_commit,omitempty"` // Optional: create from specific commit
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBranchRequest) Reset() {
	*x = CreateBranchRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBranchRequest) ProtoMessage() {}

func (x *CreateBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBranchRequest.ProtoReflect.Descriptor instead.
func (*CreateBranchRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{34}
}

func (x *CreateBranchRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *CreateBranchRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBranchRequest) GetFromCommit() string {
	if x != nil {
		return x.FromCommit
	}
	return ""
}

type CreateBranchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CommitHash    string                 `protobuf:"bytes,2,opt,name=commit_hash,json=commitHash,proto3" json:"commit_hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateBranchResponse) Reset() {
	*x = CreateBranchResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBranchResponse) ProtoMessage() {}

func (x *CreateBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBranchResponse.ProtoReflect.Descriptor instead.
func (*CreateBranchResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{35}
}

func (x *CreateBranchResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBranchResponse) GetCommitHash() string {
	if x != nil {
		return x.CommitHash
	}
	return ""
}

type ListBranchesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBranchesRequest) Reset() {
	*x = ListBranchesRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBranchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBranchesRequest) ProtoMessage() {}

func (x *ListBranchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBranchesRequest.ProtoReflect.Descriptor instead.
func (*ListBranchesRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{36}
}

func (x *ListBranchesRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

type ListBranchesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Branches      []*Branch              `protobuf:"bytes,1,rep,name=branches,proto3" json:"branches,omitempty"`
	CurrentBranch string                 `protobuf:"bytes,2,opt,name=current_branch,json=currentBranch,proto3" json:"current_branch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListBranchesResponse) Reset() {
	*x = ListBranchesResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListBranchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBranchesResponse) ProtoMessage() {}

func (x *ListBranchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBranchesResponse.ProtoReflect.Descriptor instead.
func (*ListBranchesResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{37}
}

func (x *ListBranchesResponse) GetBranches() []*Branch {
	if x != nil {
		return x.Branches
	}
	return nil
}

func (x *ListBranchesResponse) GetCurrentBranch() string {
	if x != nil {
		return x.CurrentBranch
	}
	return ""
}

type Branch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CommitHash    string                 `protobuf:"bytes,2,opt,name=commit_hash,json=commitHash,proto3" json:"commit_hash,omitempty"`
	LastCommit    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_commit,json=lastCommit,proto3" json:"last_commit,omitempty"`
	Author        string                 `protobuf:"bytes,4,opt,name=author,proto3" json:"author,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Branch) Reset() {
	*x = Branch{}
	mi := &file_api_proto_govc_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Branch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Branch) ProtoMessage() {}

func (x *Branch) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Branch.ProtoReflect.Descriptor instead.
func (*Branch) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{38}
}

func (x *Branch) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Branch) GetCommitHash() string {
	if x != nil {
		return x.CommitHash
	}
	return ""
}

func (x *Branch) GetLastCommit() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCommit
	}
	return nil
}

func (x *Branch) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

type DeleteBranchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteBranchRequest) Reset() {
	*x = DeleteBranchRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBranchRequest) ProtoMessage() {}

func (x *DeleteBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBranchRequest.ProtoReflect.Descriptor instead.
func (*DeleteBranchRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteBranchRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *DeleteBranchRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CheckoutBranchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckoutBranchRequest) Reset() {
	*x = CheckoutBranchRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckoutBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutBranchRequest) ProtoMessage() {}

func (x *CheckoutBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutBranchRequest.ProtoReflect.Descriptor instead.
func (*CheckoutBranchRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{40}
}

func (x *CheckoutBranchRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *CheckoutBranchRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type MergeBranchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	SourceBranch  string                 `protobuf:"bytes,2,opt,name=source_branch,json=sourceBranch,proto3" json:"source_branch,omitempty"`
	TargetBranch  string                 `protobuf:"bytes,3,opt,name=target_branch,json=targetBranch,proto3" json:"target_branch,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeBranchRequest) Reset() {
	*x = MergeBranchRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeBranchRequest) ProtoMessage() {}

func (x *MergeBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeBranchRequest.ProtoReflect.Descriptor instead.
func (*MergeBranchRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{41}
}

func (x *MergeBranchRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *MergeBranchRequest) GetSourceBranch() string {
	if x != nil {
		return x.SourceBranch
	}
	return ""
}

func (x *MergeBranchRequest) GetTargetBranch() string {
	if x != nil {
		return x.TargetBranch
	}
	return ""
}

func (x *MergeBranchRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type MergeBranchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommitHash    string                 `protobuf:"bytes,1,opt,name=commit_hash,json=commitHash,proto3" json:"commit_hash,omitempty"`
	Conflicts     bool                   `protobuf:"varint,2,opt,name=conflicts,proto3" json:"conflicts,omitempty"`
	ConflictFiles []string               `protobuf:"bytes,3,rep,name=conflict_files,json=conflictFiles,proto3" json:"conflict_files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeBranchResponse) Reset() {
	*x = MergeBranchResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeBranchResponse) ProtoMessage() {}

func (x *MergeBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeBranchResponse.ProtoReflect.Descriptor instead.
func (*MergeBranchResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{42}
}

func (x *MergeBranchResponse) GetCommitHash() string {
	if x != nil {
		return x.CommitHash
	}
	return ""
}

func (x *MergeBranchResponse) GetConflicts() bool {
	if x != nil {
		return x.Conflicts
	}
	return false
}

func (x *MergeBranchResponse) GetConflictFiles() []string {
	if x != nil {
		return x.ConflictFiles
	}
	return nil
}

// Search Operations
type FullTextSearchRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId    string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Query           string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	FileTypes       []string               `protobuf:"bytes,3,rep,name=file_types,json=fileTypes,proto3" json:"file_types,omitempty"`
	MaxSize         int64                  `protobuf:"varint,4,opt,name=max_size,json=maxSize,proto3" json:"max_size,omitempty"`
	MinScore        float64                `protobuf:"fixed64,5,opt,name=min_score,json=minScore,proto3" json:"min_score,omitempty"`
	IncludeContent  bool                   `protobuf:"varint,6,opt,name=include_content,json=includeContent,proto3" json:"include_content,omitempty"`
	HighlightLength int32                  `protobuf:"varint,7,opt,name=highlight_length,json=highlightLength,proto3" json:"highlight_length,omitempty"`
	Limit           int32                  `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset          int32                  `protobuf:"varint,9,opt,name=offset,proto3" json:"offset,omitempty"`
	SortBy          string                 `protobuf:"bytes,10,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FullTextSearchRequest) Reset() {
	*x = FullTextSearchRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullTextSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullTextSearchRequest) ProtoMessage() {}

func (x *FullTextSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullTextSearchRequest.ProtoReflect.Descriptor instead.
func (*FullTextSearchRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{43}
}

func (x *FullTextSearchRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *FullTextSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *FullTextSearchRequest) GetFileTypes() []string {
	if x != nil {
		return x.FileTypes
	}
	return nil
}

func (x *FullTextSearchRequest) GetMaxSize() int64 {
	if x != nil {
		return x.MaxSize
	}
	return 0
}

func (x *FullTextSearchRequest) GetMinScore() float64 {
	if x != nil {
		return x.MinScore
	}
	return 0
}

func (x *FullTextSearchRequest) GetIncludeContent() bool {
	if x != nil {
		return x.IncludeContent
	}
	return false
}

func (x *FullTextSearchRequest) GetHighlightLength() int32 {
	if x != nil {
		return x.HighlightLength
	}
	return 0
}

func (x *FullTextSearchRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FullTextSearchRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FullTextSearchRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

type FullTextSearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*SearchResult        `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	QueryTimeMs   float64                `protobuf:"fixed64,3,opt,name=query_time_ms,json=queryTimeMs,proto3" json:"query_time_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FullTextSearchResponse) Reset() {
	*x = FullTextSearchResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullTextSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullTextSearchResponse) ProtoMessage() {}

func (x *FullTextSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullTextSearchResponse.ProtoReflect.Descriptor instead.
func (*FullTextSearchResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{44}
}

func (x *FullTextSearchResponse) GetResults() []*SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *FullTextSearchResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FullTextSearchResponse) GetQueryTimeMs() float64 {
	if x != nil {
		return x.QueryTimeMs
	}
	return 0
}

type SearchResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Document      *SearchDocument        `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	Score         float64                `protobuf:"fixed64,2,opt,name=score,proto3" json:"score,omitempty"`
	Highlights    []string               `protobuf:"bytes,3,rep,name=highlights,proto3" json:"highlights,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	mi := &file_api_proto_govc_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{45}
}

func (x *SearchResult) GetDocument() *SearchDocument {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *SearchResult) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SearchResult) GetHighlights() []string {
	if x != nil {
		return x.Highlights
	}
	return nil
}

type SearchDocument struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Hash          string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	LastModified  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	Content       []byte                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	ContentType   string                 `protobuf:"bytes,6,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchDocument) Reset() {
	*x = SearchDocument{}
	mi := &file_api_proto_govc_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDocument) ProtoMessage() {}

func (x *SearchDocument) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDocument.ProtoReflect.Descriptor instead.
func (*SearchDocument) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{46}
}

func (x *SearchDocument) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SearchDocument) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *SearchDocument) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *SearchDocument) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

func (x *SearchDocument) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SearchDocument) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type ExecuteSQLQueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	SqlQuery      string                 `protobuf:"bytes,2,opt,name=sql_query,json=sqlQuery,proto3" json:"sql_query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteSQLQueryRequest) Reset() {
	*x = ExecuteSQLQueryRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteSQLQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteSQLQueryRequest) ProtoMessage() {}

func (x *ExecuteSQLQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteSQLQueryRequest.ProtoReflect.Descriptor instead.
func (*ExecuteSQLQueryRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{47}
}

func (x *ExecuteSQLQueryRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *ExecuteSQLQueryRequest) GetSqlQuery() string {
	if x != nil {
		return x.SqlQuery
	}
	return ""
}

type ExecuteSQLQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*QueryRow            `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	QueryTimeMs   float64                `protobuf:"fixed64,3,opt,name=query_time_ms,json=queryTimeMs,proto3" json:"query_time_ms,omitempty"`
	ExecutedSql   string                 `protobuf:"bytes,4,opt,name=executed_sql,json=executedSql,proto3" json:"executed_sql,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteSQLQueryResponse) Reset() {
	*x = ExecuteSQLQueryResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteSQLQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteSQLQueryResponse) ProtoMessage() {}

func (x *ExecuteSQLQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteSQLQueryResponse.ProtoReflect.Descriptor instead.
func (*ExecuteSQLQueryResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{48}
}

func (x *ExecuteSQLQueryResponse) GetRows() []*QueryRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *ExecuteSQLQueryResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ExecuteSQLQueryResponse) GetQueryTimeMs() float64 {
	if x != nil {
		return x.QueryTimeMs
	}
	return 0
}

func (x *ExecuteSQLQueryResponse) GetExecutedSql() string {
	if x != nil {
		return x.ExecutedSql
	}
	return ""
}

type QueryRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fields        map[string]string      `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // String representation of all field values
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryRow) Reset() {
	*x = QueryRow{}
	mi := &file_api_proto_govc_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRow) ProtoMessage() {}

func (x *QueryRow) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRow.ProtoReflect.Descriptor instead.
func (*QueryRow) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{49}
}

func (x *QueryRow) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

type SearchWithAggregationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Query         *FullTextSearchRequest `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	GroupBy       []string               `protobuf:"bytes,3,rep,name=group_by,json=groupBy,proto3" json:"group_by,omitempty"`
	Aggregations  []string               `protobuf:"bytes,4,rep,name=aggregations,proto3" json:"aggregations,omitempty"`
	TimeRange     string                 `protobuf:"bytes,5,opt,name=time_range,json=timeRange,proto3" json:"time_range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchWithAggregationRequest) Reset() {
	*x = SearchWithAggregationRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchWithAggregationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchWithAggregationRequest) ProtoMessage() {}

func (x *SearchWithAggregationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchWithAggregationRequest.ProtoReflect.Descriptor instead.
func (*SearchWithAggregationRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{50}
}

func (x *SearchWithAggregationRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *SearchWithAggregationRequest) GetQuery() *FullTextSearchRequest {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *SearchWithAggregationRequest) GetGroupBy() []string {
	if x != nil {
		return x.GroupBy
	}
	return nil
}

func (x *SearchWithAggregationRequest) GetAggregations() []string {
	if x != nil {
		return x.Aggregations
	}
	return nil
}

func (x *SearchWithAggregationRequest) GetTimeRange() string {
	if x != nil {
		return x.TimeRange
	}
	return ""
}

type SearchWithAggregationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Groups        []*AggregationGroup    `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	Summary       *AggregationSummary    `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchWithAggregationResponse) Reset() {
	*x = SearchWithAggregationResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchWithAggregationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchWithAggregationResponse) ProtoMessage() {}

func (x *SearchWithAggregationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchWithAggregationResponse.ProtoReflect.Descriptor instead.
func (*SearchWithAggregationResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{51}
}

func (x *SearchWithAggregationResponse) GetGroups() []*AggregationGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *SearchWithAggregationResponse) GetSummary() *AggregationSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type AggregationGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupValue    string                 `protobuf:"bytes,1,opt,name=group_value,json=groupValue,proto3" json:"group_value,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Metrics       map[string]float64     `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	SampleResults []*SearchResult        `protobuf:"bytes,4,rep,name=sample_results,json=sampleResults,proto3" json:"sample_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AggregationGroup) Reset() {
	*x = AggregationGroup{}
	mi := &file_api_proto_govc_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregationGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregationGroup) ProtoMessage() {}

func (x *AggregationGroup) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregationGroup.ProtoReflect.Descriptor instead.
func (*AggregationGroup) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{52}
}

func (x *AggregationGroup) GetGroupValue() string {
	if x != nil {
		return x.GroupValue
	}
	return ""
}

func (x *AggregationGroup) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *AggregationGroup) GetMetrics() map[string]float64 {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *AggregationGroup) GetSampleResults() []*SearchResult {
	if x != nil {
		return x.SampleResults
	}
	return nil
}

type AggregationSummary struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalDocuments int32                  `protobuf:"varint,1,opt,name=total_documents,json=totalDocuments,proto3" json:"total_documents,omitempty"`
	TotalGroups    int32                  `protobuf:"varint,2,opt,name=total_groups,json=totalGroups,proto3" json:"total_groups,omitempty"`
	Metrics        map[string]float64     `protobuf:"bytes,3,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AggregationSummary) Reset() {
	*x = AggregationSummary{}
	mi := &file_api_proto_govc_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregationSummary) ProtoMessage() {}

func (x *AggregationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregationSummary.ProtoReflect.Descriptor instead.
func (*AggregationSummary) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{53}
}

func (x *AggregationSummary) GetTotalDocuments() int32 {
	if x != nil {
		return x.TotalDocuments
	}
	return 0
}

func (x *AggregationSummary) GetTotalGroups() int32 {
	if x != nil {
		return x.TotalGroups
	}
	return 0
}

func (x *AggregationSummary) GetMetrics() map[string]float64 {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// Streaming Operations
type StreamBlobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Hash          string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	ChunkSize     int32                  `protobuf:"varint,3,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	StartOffset   int64                  `protobuf:"varint,4,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`
	EndOffset     int64                  `protobuf:"varint,5,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamBlobRequest) Reset() {
	*x = StreamBlobRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamBlobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamBlobRequest) ProtoMessage() {}

func (x *StreamBlobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamBlobRequest.ProtoReflect.Descriptor instead.
func (*StreamBlobRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{54}
}

func (x *StreamBlobRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *StreamBlobRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *StreamBlobRequest) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *StreamBlobRequest) GetStartOffset() int64 {
	if x != nil {
		return x.StartOffset
	}
	return 0
}

func (x *StreamBlobRequest) GetEndOffset() int64 {
	if x != nil {
		return x.EndOffset
	}
	return 0
}

type StreamBlobResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Response:
	//
	//	*StreamBlobResponse_Metadata
	//	*StreamBlobResponse_Chunk
	//	*StreamBlobResponse_Progress
	//	*StreamBlobResponse_Error
	Response      isStreamBlobResponse_Response `protobuf_oneof:"response"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamBlobResponse) Reset() {
	*x = StreamBlobResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamBlobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamBlobResponse) ProtoMessage() {}

func (x *StreamBlobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamBlobResponse.ProtoReflect.Descriptor instead.
func (*StreamBlobResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{55}
}

func (x *StreamBlobResponse) GetResponse() isStreamBlobResponse_Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *StreamBlobResponse) GetMetadata() *StreamMetadata {
	if x != nil {
		if x, ok := x.Response.(*StreamBlobResponse_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *StreamBlobResponse) GetChunk() *StreamChunk {
	if x != nil {
		if x, ok := x.Response.(*StreamBlobResponse_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

func (x *StreamBlobResponse) GetProgress() *StreamProgress {
	if x != nil {
		if x, ok := x.Response.(*StreamBlobResponse_Progress); ok {
			return x.Progress
		}
	}
	return nil
}

func (x *StreamBlobResponse) GetError() *StreamError {
	if x != nil {
		if x, ok := x.Response.(*StreamBlobResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isStreamBlobResponse_Response interface {
	isStreamBlobResponse_Response()
}

type StreamBlobResponse_Metadata struct {
	Metadata *StreamMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type StreamBlobResponse_Chunk struct {
	Chunk *StreamChunk `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

type StreamBlobResponse_Progress struct {
	Progress *StreamProgress `protobuf:"bytes,3,opt,name=progress,proto3,oneof"`
}

type StreamBlobResponse_Error struct {
	Error *StreamError `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*StreamBlobResponse_Metadata) isStreamBlobResponse_Response() {}

func (*StreamBlobResponse_Chunk) isStreamBlobResponse_Response() {}

func (*StreamBlobResponse_Progress) isStreamBlobResponse_Response() {}

func (*StreamBlobResponse_Error) isStreamBlobResponse_Response() {}

type StreamMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	TotalSize     int64                  `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	ChunkCount    int32                  `protobuf:"varint,3,opt,name=chunk_count,json=chunkCount,proto3" json:"chunk_count,omitempty"`
	ContentType   string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Checksum      string                 `protobuf:"bytes,5,opt,name=checksum,proto3" json:"checksum,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamMetadata) Reset() {
	*x = StreamMetadata{}
	mi := &file_api_proto_govc_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMetadata) ProtoMessage() {}

func (x *StreamMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMetadata.ProtoReflect.Descriptor instead.
func (*StreamMetadata) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{56}
}

func (x *StreamMetadata) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamMetadata) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *StreamMetadata) GetChunkCount() int32 {
	if x != nil {
		return x.ChunkCount
	}
	return 0
}

func (x *StreamMetadata) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *StreamMetadata) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

type StreamChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	SequenceNum   int32                  `protobuf:"varint,2,opt,name=sequence_num,json=sequenceNum,proto3" json:"sequence_num,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Checksum      string                 `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	IsLast        bool                   `protobuf:"varint,5,opt,name=is_last,json=isLast,proto3" json:"is_last,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamChunk) Reset() {
	*x = StreamChunk{}
	mi := &file_api_proto_govc_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamChunk) ProtoMessage() {}

func (x *StreamChunk) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamChunk.ProtoReflect.Descriptor instead.
func (*StreamChunk) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{57}
}

func (x *StreamChunk) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamChunk) GetSequenceNum() int32 {
	if x != nil {
		return x.SequenceNum
	}
	return 0
}

func (x *StreamChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StreamChunk) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *StreamChunk) GetIsLast() bool {
	if x != nil {
		return x.IsLast
	}
	return false
}

type StreamProgress struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	StreamId         string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	BytesStreamed    int64                  `protobuf:"varint,2,opt,name=bytes_streamed,json=bytesStreamed,proto3" json:"bytes_streamed,omitempty"`
	TotalBytes       int64                  `protobuf:"varint,3,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	ChunksStreamed   int32                  `protobuf:"varint,4,opt,name=chunks_streamed,json=chunksStreamed,proto3" json:"chunks_streamed,omitempty"`
	TotalChunks      int32                  `protobuf:"varint,5,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"`
	TransferRateMbps float64                `protobuf:"fixed64,6,opt,name=transfer_rate_mbps,json=transferRateMbps,proto3" json:"transfer_rate_mbps,omitempty"`
	Status           string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *StreamProgress) Reset() {
	*x = StreamProgress{}
	mi := &file_api_proto_govc_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamProgress) ProtoMessage() {}

func (x *StreamProgress) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamProgress.ProtoReflect.Descriptor instead.
func (*StreamProgress) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{58}
}

func (x *StreamProgress) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamProgress) GetBytesStreamed() int64 {
	if x != nil {
		return x.BytesStreamed
	}
	return 0
}

func (x *StreamProgress) GetTotalBytes() int64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

func (x *StreamProgress) GetChunksStreamed() int32 {
	if x != nil {
		return x.ChunksStreamed
	}
	return 0
}

func (x *StreamProgress) GetTotalChunks() int32 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

func (x *StreamProgress) GetTransferRateMbps() float64 {
	if x != nil {
		return x.TransferRateMbps
	}
	return 0
}

func (x *StreamProgress) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type StreamError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ErrorCode     int32                  `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamError) Reset() {
	*x = StreamError{}
	mi := &file_api_proto_govc_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamError) ProtoMessage() {}

func (x *StreamError) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamError.ProtoReflect.Descriptor instead.
func (*StreamError) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{59}
}

func (x *StreamError) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *StreamError) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type UploadBlobStreamRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	// Types that are valid to be assigned to Request:
	//
	//	*UploadBlobStreamRequest_Metadata
	//	*UploadBlobStreamRequest_Chunk
	Request       isUploadBlobStreamRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadBlobStreamRequest) Reset() {
	*x = UploadBlobStreamRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadBlobStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlobStreamRequest) ProtoMessage() {}

func (x *UploadBlobStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlobStreamRequest.ProtoReflect.Descriptor instead.
func (*UploadBlobStreamRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{60}
}

func (x *UploadBlobStreamRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *UploadBlobStreamRequest) GetRequest() isUploadBlobStreamRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *UploadBlobStreamRequest) GetMetadata() *UploadMetadata {
	if x != nil {
		if x, ok := x.Request.(*UploadBlobStreamRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *UploadBlobStreamRequest) GetChunk() *StreamChunk {
	if x != nil {
		if x, ok := x.Request.(*UploadBlobStreamRequest_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

type isUploadBlobStreamRequest_Request interface {
	isUploadBlobStreamRequest_Request()
}

type UploadBlobStreamRequest_Metadata struct {
	Metadata *UploadMetadata `protobuf:"bytes,2,opt,name=metadata,proto3,oneof"`
}

type UploadBlobStreamRequest_Chunk struct {
	Chunk *StreamChunk `protobuf:"bytes,3,opt,name=chunk,proto3,oneof"`
}

func (*UploadBlobStreamRequest_Metadata) isUploadBlobStreamRequest_Request() {}

func (*UploadBlobStreamRequest_Chunk) isUploadBlobStreamRequest_Request() {}

type UploadMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	TotalSize     int64                  `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	ChunkSize     int32                  `protobuf:"varint,3,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	ContentType   string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadMetadata) Reset() {
	*x = UploadMetadata{}
	mi := &file_api_proto_govc_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMetadata) ProtoMessage() {}

func (x *UploadMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMetadata.ProtoReflect.Descriptor instead.
func (*UploadMetadata) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{61}
}

func (x *UploadMetadata) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadMetadata) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *UploadMetadata) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *UploadMetadata) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type UploadBlobStreamResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Hash           string                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Size           int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	ChunksReceived int32                  `protobuf:"varint,3,opt,name=chunks_received,json=chunksReceived,proto3" json:"chunks_received,omitempty"`
	Checksum       string                 `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UploadBlobStreamResponse) Reset() {
	*x = UploadBlobStreamResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadBlobStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBlobStreamResponse) ProtoMessage() {}

func (x *UploadBlobStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBlobStreamResponse.ProtoReflect.Descriptor instead.
func (*UploadBlobStreamResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{62}
}

func (x *UploadBlobStreamResponse) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *UploadBlobStreamResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadBlobStreamResponse) GetChunksReceived() int32 {
	if x != nil {
		return x.ChunksReceived
	}
	return 0
}

func (x *UploadBlobStreamResponse) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

// Health and Status
type HealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "healthy", "unhealthy", "degraded"
	Checks        map[string]string      `protobuf:"bytes,2,rep,name=checks,proto3" json:"checks,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	UptimeSeconds float64                `protobuf:"fixed64,4,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthResponse) Reset() {
	*x = HealthResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthResponse) ProtoMessage() {}

func (x *HealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthResponse.ProtoReflect.Descriptor instead.
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{63}
}

func (x *HealthResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthResponse) GetChecks() map[string]string {
	if x != nil {
		return x.Checks
	}
	return nil
}

func (x *HealthResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HealthResponse) GetUptimeSeconds() float64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

type GetStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId  string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatusRequest) Reset() {
	*x = GetStatusRequest{}
	mi := &file_api_proto_govc_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusRequest) ProtoMessage() {}

func (x *GetStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusRequest.ProtoReflect.Descriptor instead.
func (*GetStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{64}
}

func (x *GetStatusRequest) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

type GetStatusResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RepositoryId   string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	CurrentBranch  string                 `protobuf:"bytes,2,opt,name=current_branch,json=currentBranch,proto3" json:"current_branch,omitempty"`
	StagedFiles    int32                  `protobuf:"varint,3,opt,name=staged_files,json=stagedFiles,proto3" json:"staged_files,omitempty"`
	UnstagedFiles  int32                  `protobuf:"varint,4,opt,name=unstaged_files,json=unstagedFiles,proto3" json:"unstaged_files,omitempty"`
	UntrackedFiles int32                  `protobuf:"varint,5,opt,name=untracked_files,json=untrackedFiles,proto3" json:"untracked_files,omitempty"`
	StatusEntries  []string               `protobuf:"bytes,6,rep,name=status_entries,json=statusEntries,proto3" json:"status_entries,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetStatusResponse) Reset() {
	*x = GetStatusResponse{}
	mi := &file_api_proto_govc_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusResponse) ProtoMessage() {}

func (x *GetStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_govc_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusResponse.ProtoReflect.Descriptor instead.
func (*GetStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_govc_proto_rawDescGZIP(), []int{65}
}

func (x *GetStatusResponse) GetRepositoryId() string {
	if x != nil {
		return x.RepositoryId
	}
	return ""
}

func (x *GetStatusResponse) GetCurrentBranch() string {
	if x != nil {
		return x.CurrentBranch
	}
	return ""
}

func (x *GetStatusResponse) GetStagedFiles() int32 {
	if x != nil {
		return x.StagedFiles
	}
	return 0
}

func (x *GetStatusResponse) GetUnstagedFiles() int32 {
	if x != nil {
		return x.UnstagedFiles
	}
	return 0
}

func (x *GetStatusResponse) GetUntrackedFiles() int32 {
	if x != nil {
		return x.UntrackedFiles
	}
	return 0
}

func (x *GetStatusResponse) GetStatusEntries() []string {
	if x != nil {
		return x.StatusEntries
	}
	return nil
}

var File_api_proto_govc_proto protoreflect.FileDescriptor

const file_api_proto_govc_proto_rawDesc = "" +
	"\n" +
	"\x14api/proto/govc.proto\x12\x04govc\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xe5\x01\n" +
	"\x17CreateRepositoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12G\n" +
	"\bmetadata\x18\x04 \x03(\v2+.govc.CreateRepositoryRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"y\n" +
	"\x18CreateRepositoryResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"&\n" +
	"\x14GetRepositoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x9c\x02\n" +
	"\x15GetRepositoryResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12E\n" +
	"\bmetadata\x18\x05 \x03(\v2).govc.GetRepositoryResponse.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\")\n" +
	"\x17DeleteRepositoryRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"G\n" +
	"\x17ListRepositoriesRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\"q\n" +
	"\x18ListRepositoriesResponse\x12?\n" +
	"\frepositories\x18\x01 \x03(\v2\x1b.govc.GetRepositoryResponseR\frepositories\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"Q\n" +
	"\x10StoreBlobRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\";\n" +
	"\x11StoreBlobResponse\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\"I\n" +
	"\x0eGetBlobRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\tR\x04hash\"S\n" +
	"\x0fGetBlobResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\tR\x04hash\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\"\x83\x01\n" +
	"\x19StoreBlobWithDeltaRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\fR\acontent\x12'\n" +
	"\x0fuse_compression\x18\x03 \x01(\bR\x0euseCompression\"\x9a\x01\n" +
	"\x1aStoreBlobWithDeltaResponse\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12'\n" +
	"\x0fcompressed_size\x18\x03 \x01(\x03R\x0ecompressedSize\x12+\n" +
	"\x11compression_ratio\x18\x04 \x01(\x02R\x10compressionRatio\"R\n" +
	"\x17GetBlobWithDeltaRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\tR\x04hash\"\xac\x01\n" +
	"\x18GetBlobWithDeltaResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\tR\x04hash\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12'\n" +
	"\x0fcompressed_size\x18\x04 \x01(\x03R\x0ecompressedSize\x12%\n" +
	"\x0ewas_compressed\x18\x05 \x01(\bR\rwasCompressed\"\xb1\x01\n" +
	"\x16BatchOperationsRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x124\n" +
	"\n" +
	"operations\x18\x02 \x03(\v2\x14.govc.BatchOperationR\n" +
	"operations\x12\x1a\n" +
	"\bparallel\x18\x03 \x01(\bR\bparallel\x12 \n" +
	"\vtransaction\x18\x04 \x01(\bR\vtransaction\"L\n" +
	"\x0eBatchOperation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06params\x18\x03 \x01(\fR\x06params\"\xab\x01\n" +
	"\x17BatchOperationsResponse\x124\n" +
	"\aresults\x18\x01 \x03(\v2\x1a.govc.BatchOperationResultR\aresults\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\x12*\n" +
	"\x11execution_time_ms\x18\x04 \x01(\x01R\x0fexecutionTimeMs\"n\n" +
	"\x14BatchOperationResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x16\n" +
	"\x06result\x18\x03 \x01(\fR\x06result\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"c\n" +
	"\x0eAddFileRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x18\n" +
	"\acontent\x18\x03 \x01(\fR\acontent\"9\n" +
	"\x0fAddFileResponse\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\"b\n" +
	"\x0fReadFileRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x16\n" +
	"\x06commit\x18\x03 \x01(\tR\x06commit\"\x95\x01\n" +
	"\x10ReadFileResponse\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\tR\x04hash\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12?\n" +
	"\rlast_modified\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\flastModified\"\x86\x01\n" +
	"\x10WriteFileRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x18\n" +
	"\acontent\x18\x03 \x01(\fR\acontent\x12\x1f\n" +
	"\vcreate_dirs\x18\x04 \x01(\bR\n" +
	"createDirs\";\n" +
	"\x11WriteFileResponse\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\"L\n" +
	"\x11RemoveFileRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\"l\n" +
	"\x0fMoveFileRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x1b\n" +
	"\tfrom_path\x18\x02 \x01(\tR\bfromPath\x12\x17\n" +
	"\ato_path\x18\x03 \x01(\tR\x06toPath\"|\n" +
	"\rCommitRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x16\n" +
	"\x06author\x18\x03 \x01(\tR\x06author\x12\x14\n" +
	"\x05files\x18\x04 \x03(\tR\x05files\"\x90\x01\n" +
	"\x0eCommitResponse\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x16\n" +
	"\x06author\x18\x03 \x01(\tR\x06author\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"K\n" +
	"\x10GetCommitRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\tR\x04hash\"\xe4\x01\n" +
	"\x11GetCommitResponse\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x16\n" +
	"\x06author\x18\x03 \x01(\tR\x06author\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12#\n" +
	"\rparent_hashes\x18\x05 \x03(\tR\fparentHashes\x12*\n" +
	"\achanges\x18\x06 \x03(\v2\x10.govc.FileChangeR\achanges\"H\n" +
	"\n" +
	"FileChange\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x12\n" +
	"\x04hash\x18\x03 \x01(\tR\x04hash\"\x97\x01\n" +
	"\x12ListCommitsRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x05R\x06offset\x12\x16\n" +
	"\x06branch\x18\x04 \x01(\tR\x06branch\x12\x16\n" +
	"\x06author\x18\x05 \x01(\tR\x06author\"^\n" +
	"\x13ListCommitsResponse\x121\n" +
	"\acommits\x18\x01 \x03(\v2\x17.govc.GetCommitResponseR\acommits\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"o\n" +
	"\x13CreateBranchRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1f\n" +
	"\vfrom_commit\x18\x03 \x01(\tR\n" +
	"fromCommit\"K\n" +
	"\x14CreateBranchResponse\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vcommit_hash\x18\x02 \x01(\tR\n" +
	"commitHash\":\n" +
	"\x13ListBranchesRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\"g\n" +
	"\x14ListBranchesResponse\x12(\n" +
	"\bbranches\x18\x01 \x03(\v2\f.govc.BranchR\bbranches\x12%\n" +
	"\x0ecurrent_branch\x18\x02 \x01(\tR\rcurrentBranch\"\x92\x01\n" +
	"\x06Branch\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vcommit_hash\x18\x02 \x01(\tR\n" +
	"commitHash\x12;\n" +
	"\vlast_commit\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastCommit\x12\x16\n" +
	"\x06author\x18\x04 \x01(\tR\x06author\"N\n" +
	"\x13DeleteBranchRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"P\n" +
	"\x15CheckoutBranchRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\x9d\x01\n" +
	"\x12MergeBranchRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12#\n" +
	"\rsource_branch\x18\x02 \x01(\tR\fsourceBranch\x12#\n" +
	"\rtarget_branch\x18\x03 \x01(\tR\ftargetBranch\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"{\n" +
	"\x13MergeBranchResponse\x12\x1f\n" +
	"\vcommit_hash\x18\x01 \x01(\tR\n" +
	"commitHash\x12\x1c\n" +
	"\tconflicts\x18\x02 \x01(\bR\tconflicts\x12%\n" +
	"\x0econflict_files\x18\x03 \x03(\tR\rconflictFiles\"\xc4\x02\n" +
	"\x15FullTextSearchRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x1d\n" +
	"\n" +
	"file_types\x18\x03 \x03(\tR\tfileTypes\x12\x19\n" +
	"\bmax_size\x18\x04 \x01(\x03R\amaxSize\x12\x1b\n" +
	"\tmin_score\x18\x05 \x01(\x01R\bminScore\x12'\n" +
	"\x0finclude_content\x18\x06 \x01(\bR\x0eincludeContent\x12)\n" +
	"\x10highlight_length\x18\a \x01(\x05R\x0fhighlightLength\x12\x14\n" +
	"\x05limit\x18\b \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\t \x01(\x05R\x06offset\x12\x17\n" +
	"\asort_by\x18\n" +
	" \x01(\tR\x06sortBy\"\x80\x01\n" +
	"\x16FullTextSearchResponse\x12,\n" +
	"\aresults\x18\x01 \x03(\v2\x12.govc.SearchResultR\aresults\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\"\n" +
	"\rquery_time_ms\x18\x03 \x01(\x01R\vqueryTimeMs\"v\n" +
	"\fSearchResult\x120\n" +
	"\bdocument\x18\x01 \x01(\v2\x14.govc.SearchDocumentR\bdocument\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x01R\x05score\x12\x1e\n" +
	"\n" +
	"highlights\x18\x03 \x03(\tR\n" +
	"highlights\"\xca\x01\n" +
	"\x0eSearchDocument\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\tR\x04hash\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x03R\x04size\x12?\n" +
	"\rlast_modified\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\flastModified\x12\x18\n" +
	"\acontent\x18\x05 \x01(\fR\acontent\x12!\n" +
	"\fcontent_type\x18\x06 \x01(\tR\vcontentType\"Z\n" +
	"\x16ExecuteSQLQueryRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x1b\n" +
	"\tsql_query\x18\x02 \x01(\tR\bsqlQuery\"\x9a\x01\n" +
	"\x17ExecuteSQLQueryResponse\x12\"\n" +
	"\x04rows\x18\x01 \x03(\v2\x0e.govc.QueryRowR\x04rows\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\"\n" +
	"\rquery_time_ms\x18\x03 \x01(\x01R\vqueryTimeMs\x12!\n" +
	"\fexecuted_sql\x18\x04 \x01(\tR\vexecutedSql\"y\n" +
	"\bQueryRow\x122\n" +
	"\x06fields\x18\x01 \x03(\v2\x1a.govc.QueryRow.FieldsEntryR\x06fields\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd4\x01\n" +
	"\x1cSearchWithAggregationRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x121\n" +
	"\x05query\x18\x02 \x01(\v2\x1b.govc.FullTextSearchRequestR\x05query\x12\x19\n" +
	"\bgroup_by\x18\x03 \x03(\tR\agroupBy\x12\"\n" +
	"\faggregations\x18\x04 \x03(\tR\faggregations\x12\x1d\n" +
	"\n" +
	"time_range\x18\x05 \x01(\tR\ttimeRange\"\x83\x01\n" +
	"\x1dSearchWithAggregationResponse\x12.\n" +
	"\x06groups\x18\x01 \x03(\v2\x16.govc.AggregationGroupR\x06groups\x122\n" +
	"\asummary\x18\x02 \x01(\v2\x18.govc.AggregationSummaryR\asummary\"\xff\x01\n" +
	"\x10AggregationGroup\x12\x1f\n" +
	"\vgroup_value\x18\x01 \x01(\tR\n" +
	"groupValue\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x12=\n" +
	"\ametrics\x18\x03 \x03(\v2#.govc.AggregationGroup.MetricsEntryR\ametrics\x129\n" +
	"\x0esample_results\x18\x04 \x03(\v2\x12.govc.SearchResultR\rsampleResults\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xdd\x01\n" +
	"\x12AggregationSummary\x12'\n" +
	"\x0ftotal_documents\x18\x01 \x01(\x05R\x0etotalDocuments\x12!\n" +
	"\ftotal_groups\x18\x02 \x01(\x05R\vtotalGroups\x12?\n" +
	"\ametrics\x18\x03 \x03(\v2%.govc.AggregationSummary.MetricsEntryR\ametrics\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value:\x028\x01\"\xad\x01\n" +
	"\x11StreamBlobRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\tR\x04hash\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x03 \x01(\x05R\tchunkSize\x12!\n" +
	"\fstart_offset\x18\x04 \x01(\x03R\vstartOffset\x12\x1d\n" +
	"\n" +
	"end_offset\x18\x05 \x01(\x03R\tendOffset\"\xde\x01\n" +
	"\x12StreamBlobResponse\x122\n" +
	"\bmetadata\x18\x01 \x01(\v2\x14.govc.StreamMetadataH\x00R\bmetadata\x12)\n" +
	"\x05chunk\x18\x02 \x01(\v2\x11.govc.StreamChunkH\x00R\x05chunk\x122\n" +
	"\bprogress\x18\x03 \x01(\v2\x14.govc.StreamProgressH\x00R\bprogress\x12)\n" +
	"\x05error\x18\x04 \x01(\v2\x11.govc.StreamErrorH\x00R\x05errorB\n" +
	"\n" +
	"\bresponse\"\xac\x01\n" +
	"\x0eStreamMetadata\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x1d\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x03R\ttotalSize\x12\x1f\n" +
	"\vchunk_count\x18\x03 \x01(\x05R\n" +
	"chunkCount\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12\x1a\n" +
	"\bchecksum\x18\x05 \x01(\tR\bchecksum\"\x96\x01\n" +
	"\vStreamChunk\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12!\n" +
	"\fsequence_num\x18\x02 \x01(\x05R\vsequenceNum\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12\x1a\n" +
	"\bchecksum\x18\x04 \x01(\tR\bchecksum\x12\x17\n" +
	"\ais_last\x18\x05 \x01(\bR\x06isLast\"\x87\x02\n" +
	"\x0eStreamProgress\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12%\n" +
	"\x0ebytes_streamed\x18\x02 \x01(\x03R\rbytesStreamed\x12\x1f\n" +
	"\vtotal_bytes\x18\x03 \x01(\x03R\n" +
	"totalBytes\x12'\n" +
	"\x0fchunks_streamed\x18\x04 \x01(\x05R\x0echunksStreamed\x12!\n" +
	"\ftotal_chunks\x18\x05 \x01(\x05R\vtotalChunks\x12,\n" +
	"\x12transfer_rate_mbps\x18\x06 \x01(\x01R\x10transferRateMbps\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\"_\n" +
	"\vStreamError\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x1d\n" +
	"\n" +
	"error_code\x18\x03 \x01(\x05R\terrorCode\"\xa8\x01\n" +
	"\x17UploadBlobStreamRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x122\n" +
	"\bmetadata\x18\x02 \x01(\v2\x14.govc.UploadMetadataH\x00R\bmetadata\x12)\n" +
	"\x05chunk\x18\x03 \x01(\v2\x11.govc.StreamChunkH\x00R\x05chunkB\t\n" +
	"\arequest\"\x8d\x01\n" +
	"\x0eUploadMetadata\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x1d\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x03R\ttotalSize\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x03 \x01(\x05R\tchunkSize\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\"\x87\x01\n" +
	"\x18UploadBlobStreamResponse\x12\x12\n" +
	"\x04hash\x18\x01 \x01(\tR\x04hash\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12'\n" +
	"\x0fchunks_received\x18\x03 \x01(\x05R\x0echunksReceived\x12\x1a\n" +
	"\bchecksum\x18\x04 \x01(\tR\bchecksum\"\xfe\x01\n" +
	"\x0eHealthResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x128\n" +
	"\x06checks\x18\x02 \x03(\v2 .govc.HealthResponse.ChecksEntryR\x06checks\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12%\n" +
	"\x0euptime_seconds\x18\x04 \x01(\x01R\ruptimeSeconds\x1a9\n" +
	"\vChecksEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"7\n" +
	"\x10GetStatusRequest\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\"\xf9\x01\n" +
	"\x11GetStatusResponse\x12#\n" +
	"\rrepository_id\x18\x01 \x01(\tR\frepositoryId\x12%\n" +
	"\x0ecurrent_branch\x18\x02 \x01(\tR\rcurrentBranch\x12!\n" +
	"\fstaged_files\x18\x03 \x01(\x05R\vstagedFiles\x12%\n" +
	"\x0eunstaged_files\x18\x04 \x01(\x05R\runstagedFiles\x12'\n" +
	"\x0funtracked_files\x18\x05 \x01(\x05R\x0euntrackedFiles\x12%\n" +
	"\x0estatus_entries\x18\x06 \x03(\tR\rstatusEntries2\x8a\x10\n" +
	"\vGoVCService\x12Q\n" +
	"\x10CreateRepository\x12\x1d.govc.CreateRepositoryRequest\x1a\x1e.govc.CreateRepositoryResponse\x12H\n" +
	"\rGetRepository\x12\x1a.govc.GetRepositoryRequest\x1a\x1b.govc.GetRepositoryResponse\x12I\n" +
	"\x10DeleteRepository\x12\x1d.govc.DeleteRepositoryRequest\x1a\x16.google.protobuf.Empty\x12Q\n" +
	"\x10ListRepositories\x12\x1d.govc.ListRepositoriesRequest\x1a\x1e.govc.ListRepositoriesResponse\x12<\n" +
	"\tStoreBlob\x12\x16.govc.StoreBlobRequest\x1a\x17.govc.StoreBlobResponse\x126\n" +
	"\aGetBlob\x12\x14.govc.GetBlobRequest\x1a\x15.govc.GetBlobResponse\x12W\n" +
	"\x12StoreBlobWithDelta\x12\x1f.govc.StoreBlobWithDeltaRequest\x1a .govc.StoreBlobWithDeltaResponse\x12Q\n" +
	"\x10GetBlobWithDelta\x12\x1d.govc.GetBlobWithDeltaRequest\x1a\x1e.govc.GetBlobWithDeltaResponse\x12N\n" +
	"\x0fBatchOperations\x12\x1c.govc.BatchOperationsRequest\x1a\x1d.govc.BatchOperationsResponse\x126\n" +
	"\aAddFile\x12\x14.govc.AddFileRequest\x1a\x15.govc.AddFileResponse\x129\n" +
	"\bReadFile\x12\x15.govc.ReadFileRequest\x1a\x16.govc.ReadFileResponse\x12<\n" +
	"\tWriteFile\x12\x16.govc.WriteFileRequest\x1a\x17.govc.WriteFileResponse\x12=\n" +
	"\n" +
	"RemoveFile\x12\x17.govc.RemoveFileRequest\x1a\x16.google.protobuf.Empty\x129\n" +
	"\bMoveFile\x12\x15.govc.MoveFileRequest\x1a\x16.google.protobuf.Empty\x123\n" +
	"\x06Commit\x12\x13.govc.CommitRequest\x1a\x14.govc.CommitResponse\x12<\n" +
	"\tGetCommit\x12\x16.govc.GetCommitRequest\x1a\x17.govc.GetCommitResponse\x12B\n" +
	"\vListCommits\x12\x18.govc.ListCommitsRequest\x1a\x19.govc.ListCommitsResponse\x12E\n" +
	"\fCreateBranch\x12\x19.govc.CreateBranchRequest\x1a\x1a.govc.CreateBranchResponse\x12E\n" +
	"\fListBranches\x12\x19.govc.ListBranchesRequest\x1a\x1a.govc.ListBranchesResponse\x12A\n" +
	"\fDeleteBranch\x12\x19.govc.DeleteBranchRequest\x1a\x16.google.protobuf.Empty\x12E\n" +
	"\x0eCheckoutBranch\x12\x1b.govc.CheckoutBranchRequest\x1a\x16.google.protobuf.Empty\x12B\n" +
	"\vMergeBranch\x12\x18.govc.MergeBranchRequest\x1a\x19.govc.MergeBranchResponse\x12K\n" +
	"\x0eFullTextSearch\x12\x1b.govc.FullTextSearchRequest\x1a\x1c.govc.FullTextSearchResponse\x12N\n" +
	"\x0fExecuteSQLQuery\x12\x1c.govc.ExecuteSQLQueryRequest\x1a\x1d.govc.ExecuteSQLQueryResponse\x12`\n" +
	"\x15SearchWithAggregation\x12\".govc.SearchWithAggregationRequest\x1a#.govc.SearchWithAggregationResponse\x12C\n" +
	"\n" +
	"StreamBlob\x12\x17.govc.StreamBlobRequest\x1a\x18.govc.StreamBlobResponse(\x010\x01\x12S\n" +
	"\x10UploadBlobStream\x12\x1d.govc.UploadBlobStreamRequest\x1a\x1e.govc.UploadBlobStreamResponse(\x01\x129\n" +
	"\tGetHealth\x12\x16.google.protobuf.Empty\x1a\x14.govc.HealthResponse\x12<\n" +
	"\tGetStatus\x12\x16.govc.GetStatusRequest\x1a\x17.govc.GetStatusResponseB$Z\"github.com/Caia-Tech/govc/api/protob\x06proto3"

var (
	file_api_proto_govc_proto_rawDescOnce sync.Once
	file_api_proto_govc_proto_rawDescData []byte
)

func file_api_proto_govc_proto_rawDescGZIP() []byte {
	file_api_proto_govc_proto_rawDescOnce.Do(func() {
		file_api_proto_govc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_govc_proto_rawDesc), len(file_api_proto_govc_proto_rawDesc)))
	})
	return file_api_proto_govc_proto_rawDescData
}

var file_api_proto_govc_proto_msgTypes = make([]protoimpl.MessageInfo, 72)
var file_api_proto_govc_proto_goTypes = []any{
	(*CreateRepositoryRequest)(nil),       // 0: govc.CreateRepositoryRequest
	(*CreateRepositoryResponse)(nil),      // 1: govc.CreateRepositoryResponse
	(*GetRepositoryRequest)(nil),          // 2: govc.GetRepositoryRequest
	(*GetRepositoryResponse)(nil),         // 3: govc.GetRepositoryResponse
	(*DeleteRepositoryRequest)(nil),       // 4: govc.DeleteRepositoryRequest
	(*ListRepositoriesRequest)(nil),       // 5: govc.ListRepositoriesRequest
	(*ListRepositoriesResponse)(nil),      // 6: govc.ListRepositoriesResponse
	(*StoreBlobRequest)(nil),              // 7: govc.StoreBlobRequest
	(*StoreBlobResponse)(nil),             // 8: govc.StoreBlobResponse
	(*GetBlobRequest)(nil),                // 9: govc.GetBlobRequest
	(*GetBlobResponse)(nil),               // 10: govc.GetBlobResponse
	(*StoreBlobWithDeltaRequest)(nil),     // 11: govc.StoreBlobWithDeltaRequest
	(*StoreBlobWithDeltaResponse)(nil),    // 12: govc.StoreBlobWithDeltaResponse
	(*GetBlobWithDeltaRequest)(nil),       // 13: govc.GetBlobWithDeltaRequest
	(*GetBlobWithDeltaResponse)(nil),      // 14: govc.GetBlobWithDeltaResponse
	(*BatchOperationsRequest)(nil),        // 15: govc.BatchOperationsRequest
	(*BatchOperation)(nil),                // 16: govc.BatchOperation
	(*BatchOperationsResponse)(nil),       // 17: govc.BatchOperationsResponse
	(*BatchOperationResult)(nil),          // 18: govc.BatchOperationResult
	(*AddFileRequest)(nil),                // 19: govc.AddFileRequest
	(*AddFileResponse)(nil),               // 20: govc.AddFileResponse
	(*ReadFileRequest)(nil),               // 21: govc.ReadFileRequest
	(*ReadFileResponse)(nil),              // 22: govc.ReadFileResponse
	(*WriteFileRequest)(nil),              // 23: govc.WriteFileRequest
	(*WriteFileResponse)(nil),             // 24: govc.WriteFileResponse
	(*RemoveFileRequest)(nil),             // 25: govc.RemoveFileRequest
	(*MoveFileRequest)(nil),               // 26: govc.MoveFileRequest
	(*CommitRequest)(nil),                 // 27: govc.CommitRequest
	(*CommitResponse)(nil),                // 28: govc.CommitResponse
	(*GetCommitRequest)(nil),              // 29: govc.GetCommitRequest
	(*GetCommitResponse)(nil),             // 30: govc.GetCommitResponse
	(*FileChange)(nil),                    // 31: govc.FileChange
	(*ListCommitsRequest)(nil),            // 32: govc.ListCommitsRequest
	(*ListCommitsResponse)(nil),           // 33: govc.ListCommitsResponse
	(*CreateBranchRequest)(nil),           // 34: govc.CreateBranchRequest
	(*CreateBranchResponse)(nil),          // 35: govc.CreateBranchResponse
	(*ListBranchesRequest)(nil),           // 36: govc.ListBranchesRequest
	(*ListBranchesResponse)(nil),          // 37: govc.ListBranchesResponse
	(*Branch)(nil),                        // 38: govc.Branch
	(*DeleteBranchRequest)(nil),           // 39: govc.DeleteBranchRequest
	(*CheckoutBranchRequest)(nil),         // 40: govc.CheckoutBranchRequest
	(*MergeBranchRequest)(nil),            // 41: govc.MergeBranchRequest
	(*MergeBranchResponse)(nil),           // 42: govc.MergeBranchResponse
	(*FullTextSearchRequest)(nil),         // 43: govc.FullTextSearchRequest
	(*FullTextSearchResponse)(nil),        // 44: govc.FullTextSearchResponse
	(*SearchResult)(nil),                  // 45: govc.SearchResult
	(*SearchDocument)(nil),                // 46: govc.SearchDocument
	(*ExecuteSQLQueryRequest)(nil),        // 47: govc.ExecuteSQLQueryRequest
	(*ExecuteSQLQueryResponse)(nil),       // 48: govc.ExecuteSQLQueryResponse
	(*QueryRow)(nil),                      // 49: govc.QueryRow
	(*SearchWithAggregationRequest)(nil),  // 50: govc.SearchWithAggregationRequest
	(*SearchWithAggregationResponse)(nil), // 51: govc.SearchWithAggregationResponse
	(*AggregationGroup)(nil),              // 52: govc.AggregationGroup
	(*AggregationSummary)(nil),            // 53: govc.AggregationSummary
	(*StreamBlobRequest)(nil),             // 54: govc.StreamBlobRequest
	(*StreamBlobResponse)(nil),            // 55: govc.StreamBlobResponse
	(*StreamMetadata)(nil),                // 56: govc.StreamMetadata
	(*StreamChunk)(nil),                   // 57: govc.StreamChunk
	(*StreamProgress)(nil),                // 58: govc.StreamProgress
	(*StreamError)(nil),                   // 59: govc.StreamError
	(*UploadBlobStreamRequest)(nil),       // 60: govc.UploadBlobStreamRequest
	(*UploadMetadata)(nil),                // 61: govc.UploadMetadata
	(*UploadBlobStreamResponse)(nil),      // 62: govc.UploadBlobStreamResponse
	(*HealthResponse)(nil),                // 63: govc.HealthResponse
	(*GetStatusRequest)(nil),              // 64: govc.GetStatusRequest
	(*GetStatusResponse)(nil),             // 65: govc.GetStatusResponse
	nil,                                   // 66: govc.CreateRepositoryRequest.MetadataEntry
	nil,                                   // 67: govc.GetRepositoryResponse.MetadataEntry
	nil,                                   // 68: govc.QueryRow.FieldsEntry
	nil,                                   // 69: govc.AggregationGroup.MetricsEntry
	nil,                                   // 70: govc.AggregationSummary.MetricsEntry
	nil,                                   // 71: govc.HealthResponse.ChecksEntry
	(*timestamppb.Timestamp)(nil),         // 72: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                 // 73: google.protobuf.Empty
}
var file_api_proto_govc_proto_depIdxs = []int32{
	66, // 0: govc.CreateRepositoryRequest.metadata:type_name -> govc.CreateRepositoryRequest.MetadataEntry
	72, // 1: govc.CreateRepositoryResponse.created_at:type_name -> google.protobuf.Timestamp
	72, // 2: govc.GetRepositoryResponse.created_at:type_name -> google.protobuf.Timestamp
	67, // 3: govc.GetRepositoryResponse.metadata:type_name -> govc.GetRepositoryResponse.MetadataEntry
	3,  // 4: govc.ListRepositoriesResponse.repositories:type_name -> govc.GetRepositoryResponse
	16, // 5: govc.BatchOperationsRequest.operations:type_name -> govc.BatchOperation
	18, // 6: govc.BatchOperationsResponse.results:type_name -> govc.BatchOperationResult
	72, // 7: govc.ReadFileResponse.last_modified:type_name -> google.protobuf.Timestamp
	72, // 8: govc.CommitResponse.timestamp:type_name -> google.protobuf.Timestamp
	72, // 9: govc.GetCommitResponse.timestamp:type_name -> google.protobuf.Timestamp
	31, // 10: govc.GetCommitResponse.changes:type_name -> govc.FileChange
	30, // 11: govc.ListCommitsResponse.commits:type_name -> govc.GetCommitResponse
	38, // 12: govc.ListBranchesResponse.branches:type_name -> govc.Branch
	72, // 13: govc.Branch.last_commit:type_name -> google.protobuf.Timestamp
	45, // 14: govc.FullTextSearchResponse.results:type_name -> govc.SearchResult
	46, // 15: govc.SearchResult.document:type_name -> govc.SearchDocument
	72, // 16: govc.SearchDocument.last_modified:type_name -> google.protobuf.Timestamp
	49, // 17: govc.ExecuteSQLQueryResponse.rows:type_name -> govc.QueryRow
	68, // 18: govc.QueryRow.fields:type_name -> govc.QueryRow.FieldsEntry
	43, // 19: govc.SearchWithAggregationRequest.query:type_name -> govc.FullTextSearchRequest
	52, // 20: govc.SearchWithAggregationResponse.groups:type_name -> govc.AggregationGroup
	53, // 21: govc.SearchWithAggregationResponse.summary:type_name -> govc.AggregationSummary
	69, // 22: govc.AggregationGroup.metrics:type_name -> govc.AggregationGroup.MetricsEntry
	45, // 23: govc.AggregationGroup.sample_results:type_name -> govc.SearchResult
	70, // 24: govc.AggregationSummary.metrics:type_name -> govc.AggregationSummary.MetricsEntry
	56, // 25: govc.StreamBlobResponse.metadata:type_name -> govc.StreamMetadata
	57, // 26: govc.StreamBlobResponse.chunk:type_name -> govc.StreamChunk
	58, // 27: govc.StreamBlobResponse.progress:type_name -> govc.StreamProgress
	59, // 28: govc.StreamBlobResponse.error:type_name -> govc.StreamError
	61, // 29: govc.UploadBlobStreamRequest.metadata:type_name -> govc.UploadMetadata
	57, // 30: govc.UploadBlobStreamRequest.chunk:type_name -> govc.StreamChunk
	71, // 31: govc.HealthResponse.checks:type_name -> govc.HealthResponse.ChecksEntry
	72, // 32: govc.HealthResponse.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 33: govc.GoVCService.CreateRepository:input_type -> govc.CreateRepositoryRequest
	2,  // 34: govc.GoVCService.GetRepository:input_type -> govc.GetRepositoryRequest
	4,  // 35: govc.GoVCService.DeleteRepository:input_type -> govc.DeleteRepositoryRequest
	5,  // 36: govc.GoVCService.ListRepositories:input_type -> govc.ListRepositoriesRequest
	7,  // 37: govc.GoVCService.StoreBlob:input_type -> govc.StoreBlobRequest
	9,  // 38: govc.GoVCService.GetBlob:input_type -> govc.GetBlobRequest
	11, // 39: govc.GoVCService.StoreBlobWithDelta:input_type -> govc.StoreBlobWithDeltaRequest
	13, // 40: govc.GoVCService.GetBlobWithDelta:input_type -> govc.GetBlobWithDeltaRequest
	15, // 41: govc.GoVCService.BatchOperations:input_type -> govc.BatchOperationsRequest
	19, // 42: govc.GoVCService.AddFile:input_type -> govc.AddFileRequest
	21, // 43: govc.GoVCService.ReadFile:input_type -> govc.ReadFileRequest
	23, // 44: govc.GoVCService.WriteFile:input_type -> govc.WriteFileRequest
	25, // 45: govc.GoVCService.RemoveFile:input_type -> govc.RemoveFileRequest
	26, // 46: govc.GoVCService.MoveFile:input_type -> govc.MoveFileRequest
	27, // 47: govc.GoVCService.Commit:input_type -> govc.CommitRequest
	29, // 48: govc.GoVCService.GetCommit:input_type -> govc.GetCommitRequest
	32, // 49: govc.GoVCService.ListCommits:input_type -> govc.ListCommitsRequest
	34, // 50: govc.GoVCService.CreateBranch:input_type -> govc.CreateBranchRequest
	36, // 51: govc.GoVCService.ListBranches:input_type -> govc.ListBranchesRequest
	39, // 52: govc.GoVCService.DeleteBranch:input_type -> govc.DeleteBranchRequest
	40, // 53: govc.GoVCService.CheckoutBranch:input_type -> govc.CheckoutBranchRequest
	41, // 54: govc.GoVCService.MergeBranch:input_type -> govc.MergeBranchRequest
	43, // 55: govc.GoVCService.FullTextSearch:input_type -> govc.FullTextSearchRequest
	47, // 56: govc.GoVCService.ExecuteSQLQuery:input_type -> govc.ExecuteSQLQueryRequest
	50, // 57: govc.GoVCService.SearchWithAggregation:input_type -> govc.SearchWithAggregationRequest
	54, // 58: govc.GoVCService.StreamBlob:input_type -> govc.StreamBlobRequest
	60, // 59: govc.GoVCService.UploadBlobStream:input_type -> govc.UploadBlobStreamRequest
	73, // 60: govc.GoVCService.GetHealth:input_type -> google.protobuf.Empty
	64, // 61: govc.GoVCService.GetStatus:input_type -> govc.GetStatusRequest
	1,  // 62: govc.GoVCService.CreateRepository:output_type -> govc.CreateRepositoryResponse
	3,  // 63: govc.GoVCService.GetRepository:output_type -> govc.GetRepositoryResponse
	73, // 64: govc.GoVCService.DeleteRepository:output_type -> google.protobuf.Empty
	6,  // 65: govc.GoVCService.ListRepositories:output_type -> govc.ListRepositoriesResponse
	8,  // 66: govc.GoVCService.StoreBlob:output_type -> govc.StoreBlobResponse
	10, // 67: govc.GoVCService.GetBlob:output_type -> govc.GetBlobResponse
	12, // 68: govc.GoVCService.StoreBlobWithDelta:output_type -> govc.StoreBlobWithDeltaResponse
	14, // 69: govc.GoVCService.GetBlobWithDelta:output_type -> govc.GetBlobWithDeltaResponse
	17, // 70: govc.GoVCService.BatchOperations:output_type -> govc.BatchOperationsResponse
	20, // 71: govc.GoVCService.AddFile:output_type -> govc.AddFileResponse
	22, // 72: govc.GoVCService.ReadFile:output_type -> govc.ReadFileResponse
	24, // 73: govc.GoVCService.WriteFile:output_type -> govc.WriteFileResponse
	73, // 74: govc.GoVCService.RemoveFile:output_type -> google.protobuf.Empty
	73, // 75: govc.GoVCService.MoveFile:output_type -> google.protobuf.Empty
	28, // 76: govc.GoVCService.Commit:output_type -> govc.CommitResponse
	30, // 77: govc.GoVCService.GetCommit:output_type -> govc.GetCommitResponse
	33, // 78: govc.GoVCService.ListCommits:output_type -> govc.ListCommitsResponse
	35, // 79: govc.GoVCService.CreateBranch:output_type -> govc.CreateBranchResponse
	37, // 80: govc.GoVCService.ListBranches:output_type -> govc.ListBranchesResponse
	73, // 81: govc.GoVCService.DeleteBranch:output_type -> google.protobuf.Empty
	73, // 82: govc.GoVCService.CheckoutBranch:output_type -> google.protobuf.Empty
	42, // 83: govc.GoVCService.MergeBranch:output_type -> govc.MergeBranchResponse
	44, // 84: govc.GoVCService.FullTextSearch:output_type -> govc.FullTextSearchResponse
	48, // 85: govc.GoVCService.ExecuteSQLQuery:output_type -> govc.ExecuteSQLQueryResponse
	51, // 86: govc.GoVCService.SearchWithAggregation:output_type -> govc.SearchWithAggregationResponse
	55, // 87: govc.GoVCService.StreamBlob:output_type -> govc.StreamBlobResponse
	62, // 88: govc.GoVCService.UploadBlobStream:output_type -> govc.UploadBlobStreamResponse
	63, // 89: govc.GoVCService.GetHealth:output_type -> govc.HealthResponse
	65, // 90: govc.GoVCService.GetStatus:output_type -> govc.GetStatusResponse
	62, // [62:91] is the sub-list for method output_type
	33, // [33:62] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_api_proto_govc_proto_init() }
func file_api_proto_govc_proto_init() {
	if File_api_proto_govc_proto != nil {
		return
	}
	file_api_proto_govc_proto_msgTypes[55].OneofWrappers = []any{
		(*StreamBlobResponse_Metadata)(nil),
		(*StreamBlobResponse_Chunk)(nil),
		(*StreamBlobResponse_Progress)(nil),
		(*StreamBlobResponse_Error)(nil),
	}
	file_api_proto_govc_proto_msgTypes[60].OneofWrappers = []any{
		(*UploadBlobStreamRequest_Metadata)(nil),
		(*UploadBlobStreamRequest_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_govc_proto_rawDesc), len(file_api_proto_govc_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   72,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_govc_proto_goTypes,
		DependencyIndexes: file_api_proto_govc_proto_depIdxs,
		MessageInfos:      file_api_proto_govc_proto_msgTypes,
	}.Build()
	File_api_proto_govc_proto = out.File
	file_api_proto_govc_proto_goTypes = nil
	file_api_proto_govc_proto_depIdxs = nil
}
